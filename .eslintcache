[{"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/App.js":"1","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/config.js":"2","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/store.js":"3","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/reportWebVitals.js":"4","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/index.js":"5","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/utility/helper/Logger.js":"6","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/data/pokemon/Pokemon.DataStorage.js":"7","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/data/DataStorage.js":"8","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/high-order/withMainComponent.js":"9","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/utility/constant/GeneralConstant.js":"10","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/main/Main.Component.js":"11","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/main/header/Header.Main.js":"12","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/pages/pokedata/Pokedata.Page.js":"13","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/utility/constant/DataStorageType.js":"14","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/utility/index.js":"15","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/utility/helper/DataStorageHelper.js":"16","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/pages/index.js":"17","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/utility/helper/GeneralHelper.js":"18","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/data/pokemon/Pokemon.DataSource.js":"19","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/button/btn-progress/BtnProgress.Component.js":"20","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/pokemon-detail/poke-types/PokeTypeList.Item.Component.js":"21","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/pokemon-detail/poke-types/PokeTypeList.Component.js":"22","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/pages/pokedetail/Pokedetail.Page.js":"23","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/pages/error/Error404.Page.js":"24","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/page/pokedetail/InfoDetail.Component.js":"25","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/pokemon-detail/poke-stat/PokeStats.Component.js":"26","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/page/pokedata/list-data/ListData.Component.js":"27","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/page/pokedata/list-data/ListData.Item.Skeleton.js":"28","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/page/pokedata/list-data/ListData.Item.Component.js":"29","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/page/pokedata/filter-data/FilterData.Component.js":"30","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/data/types/Types.DataStorage.js":"31","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/data/types/Types.DataSource.js":"32","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/pokemon-detail/poke-stat/PokeStats.Point.Component.js":"33","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/pokemon-detail/poke-gender/PokeGender.Component.js":"34","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/pokemon-detail/poke-items-held/PokeItemsHeld.Component.js":"35","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/page/pokedetail/InfoDetail.Skeleton.js":"36","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/pokemon-detail/poke-stat/PokeStats.Skeleton.js":"37","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/alert/CollapsibleAlert.Component.js":"38","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/pages/pokecompare/Pokecompare.Page.js":"39","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/page/pokecompare/header-input/HeaderInput.Component.js":"40","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/page/pokecompare/basic-info/BasicInfo.Component.js":"41","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/page/pokecompare/compare-wrapper/CompareWrapper.Component.js":"42","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/page/pokecompare/breed-train-info/BreedTrainInfo.Component.js":"43","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/page/pokecompare/header-sub/HeaderSub.Component.js":"44","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/page/pokecompare/stats-info/StatsInfoCompare.Component.js":"45","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/page/pokecompare/moves-info/LevelUpMoves.Component.js":"46","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/page/pokecompare/flavor-info/FlavorInfo.Component.js":"47"},{"size":1394,"mtime":1608451797376,"results":"48","hashOfConfig":"49"},{"size":337,"mtime":1608493264184,"results":"50","hashOfConfig":"49"},{"size":806,"mtime":1608494227833,"results":"51","hashOfConfig":"49"},{"size":362,"mtime":1608274004247,"results":"52","hashOfConfig":"49"},{"size":811,"mtime":1608451617289,"results":"53","hashOfConfig":"49"},{"size":3135,"mtime":1608493546180,"results":"54","hashOfConfig":"49"},{"size":13035,"mtime":1608493055445,"results":"55","hashOfConfig":"49"},{"size":345,"mtime":1608415629831,"results":"56","hashOfConfig":"49"},{"size":2176,"mtime":1608415779660,"results":"57","hashOfConfig":"49"},{"size":0,"mtime":1608275535670,"results":"58","hashOfConfig":"49"},{"size":800,"mtime":1608412871039,"results":"59","hashOfConfig":"49"},{"size":1298,"mtime":1608451816748,"results":"60","hashOfConfig":"49"},{"size":10834,"mtime":1608416249605,"results":"61","hashOfConfig":"49"},{"size":127,"mtime":1608415680555,"results":"62","hashOfConfig":"49"},{"size":360,"mtime":1608276349479,"results":"63","hashOfConfig":"49"},{"size":362,"mtime":1608291217572,"results":"64","hashOfConfig":"49"},{"size":274,"mtime":1608317724870,"results":"65","hashOfConfig":"49"},{"size":605,"mtime":1608275907648,"results":"66","hashOfConfig":"49"},{"size":1070,"mtime":1608462075252,"results":"67","hashOfConfig":"49"},{"size":1445,"mtime":1608405244689,"results":"68","hashOfConfig":"49"},{"size":2564,"mtime":1608398023962,"results":"69","hashOfConfig":"49"},{"size":593,"mtime":1608397972764,"results":"70","hashOfConfig":"49"},{"size":4824,"mtime":1608447950484,"results":"71","hashOfConfig":"49"},{"size":169,"mtime":1608317704491,"results":"72","hashOfConfig":"49"},{"size":6885,"mtime":1608446977862,"results":"73","hashOfConfig":"49"},{"size":1914,"mtime":1608407488325,"results":"74","hashOfConfig":"49"},{"size":2991,"mtime":1608405215956,"results":"75","hashOfConfig":"49"},{"size":918,"mtime":1608366547073,"results":"76","hashOfConfig":"49"},{"size":3615,"mtime":1608412355412,"results":"77","hashOfConfig":"49"},{"size":5807,"mtime":1608415506848,"results":"78","hashOfConfig":"49"},{"size":8999,"mtime":1608481462305,"results":"79","hashOfConfig":"49"},{"size":483,"mtime":1608479605195,"results":"80","hashOfConfig":"49"},{"size":1363,"mtime":1608397669859,"results":"81","hashOfConfig":"49"},{"size":1439,"mtime":1608449823852,"results":"82","hashOfConfig":"49"},{"size":1361,"mtime":1608403662840,"results":"83","hashOfConfig":"49"},{"size":2594,"mtime":1608407258642,"results":"84","hashOfConfig":"49"},{"size":665,"mtime":1608407541549,"results":"85","hashOfConfig":"49"},{"size":1343,"mtime":1608412885017,"results":"86","hashOfConfig":"49"},{"size":11422,"mtime":1608493235763,"results":"87","hashOfConfig":"49"},{"size":5875,"mtime":1608493067312,"results":"88","hashOfConfig":"49"},{"size":4662,"mtime":1608493142842,"results":"89","hashOfConfig":"49"},{"size":3549,"mtime":1608489827981,"results":"90","hashOfConfig":"49"},{"size":5902,"mtime":1608478028427,"results":"91","hashOfConfig":"49"},{"size":3372,"mtime":1608475212351,"results":"92","hashOfConfig":"49"},{"size":7791,"mtime":1608481682909,"results":"93","hashOfConfig":"49"},{"size":4226,"mtime":1608489733322,"results":"94","hashOfConfig":"49"},{"size":4110,"mtime":1608489690676,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"lz47jd",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"105"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"98"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"98"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"98"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"98"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"98"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/App.js",[],["202","203"],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/config.js",[],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/store.js",[],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/reportWebVitals.js",[],["204","205"],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/index.js",[],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/utility/helper/Logger.js",["206"],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/data/pokemon/Pokemon.DataStorage.js",["207","208","209","210","211","212","213","214"],"import { Util, Log, DataStorageHelper, DataStorageType } from \"../../utility\";\n\n\n\nexport const STORAGE_LAST_ACTION = \"LastAction\";\nexport const STORAGE_POKE_DATA = \"PokeData\";\nexport const STORAGE_POKE_SPECIES = \"PokeSpecies\";\nexport const STORAGE_POKE_COMPARE = \"PokeCompareStatus\";\n\n\n\nconst PokeInitialState = {\n    [STORAGE_LAST_ACTION]: null, // for logging last component updating this storage\n    [STORAGE_POKE_DATA]: {  }, // pokemon data, object key using PokemonID\n    [STORAGE_POKE_SPECIES]: { }, // pokemon species object\n    [STORAGE_POKE_COMPARE]: {  }, // index = pokemonID, value 0/1/99 => 0=failed or not found, 1=success, 99=waiting\n}\n\n\nexport default function PokemonStorage(state=PokeInitialState, action) {\n    if (action.type == DataStorageType.POKE_STORAGE) {\n      if (action.strloc === STORAGE_POKE_DATA) {\n        return {\n            ...state,\n            [STORAGE_LAST_ACTION]: action.payload,\n            [action.strloc]: {\n                ...state[action.strloc],\n                ...action.value\n            }\n        };\n      } else if (action.strloc === STORAGE_POKE_SPECIES) {\n        return {\n            ...state,\n            [STORAGE_LAST_ACTION]: action.payload,\n            [action.strloc]: {\n                ...state[action.strloc],\n                ...action.value\n            }\n        };\n      } else if (action.strloc === STORAGE_POKE_COMPARE) {\n        return {\n            ...state,\n            [STORAGE_LAST_ACTION]: action.payload,\n            [action.strloc]: {\n                ...state[action.strloc],\n                ...action.value\n            }\n        };\n      } else\n          return {\n              ...state,\n              [STORAGE_LAST_ACTION]: action.payload,\n              [action.strloc]: action.value\n          };\n\n    } else return state;\n  }\n\n\n  export function generatePokeDataFromRemote(response) {\n    return ({\n        id: response.id,\n        name: response.name,\n        image: response.sprites.front_default,\n        abilities: response.abilities,\n        base_experience: response.base_experience,\n        held_items: response.held_items,\n        height: response.height,\n        weight: response.weight,\n        types: response.types.map((itm)=>({ slot: itm.slot, name: itm.type.name , url: itm.type.url})),\n        stats: response.stats,\n        species: response.species,\n        moves: response.moves,\n    });\n  }\n\n  function findEnglishFlavorText(arrFlavorText) {\n    var result = \"\";\n    arrFlavorText.map(itm=>{\n      if (Util.isNullOrEmpty(result) && itm.language.name.toUpperCase() == \"EN\") {\n        result = itm.flavor_text;\n      }\n    });\n    return result\n  }\n\n  export function generatePokeSpeciesFromRemote(response) {\n    const tempFlavorText = response.flavor_text_entries;\n    const extractedFlavor = !Util.isNullOrUndefined(tempFlavorText) && findEnglishFlavorText(tempFlavorText)\n    return ({\n      base_happiness: response.base_happiness,\n      egg_groups: response.egg_groups,\n      capture_rate: response.capture_rate,\n      gender_rate: response.gender_rate,\n      growth_rate: response.growth_rate,\n      habitat: response.habitat,\n      shape: response.shape,\n      flavor_text: extractedFlavor,\n    });\n  }\n\n\n  export function setPokemonData(data, pokeID) {\n\n    return DataStorageHelper.CreateDispatcherObj(\n        DataStorageType.POKE_STORAGE, \n        `result_of_setPokemonData(data, ${pokeID})`, STORAGE_POKE_DATA, \n        {\n          [pokeID]: data,\n        }\n    );\n  }\n\n\n  export function setPokemonSpecies(data, pokeID) {\n\n    return DataStorageHelper.CreateDispatcherObj(\n        DataStorageType.POKE_STORAGE, \n        `result_of_setPokemonData(data, ${pokeID})`, STORAGE_POKE_SPECIES, \n        {\n          [pokeID]: data,\n        }\n    );\n  }\n\n\n  /**\n   * \n   * @param {int} status = Status code, 0=failed/not found, 1=success, 99=waiting \n   * @param {*} pokeID \n   */\n  export function setStatusCompare(status, pokeID) {\n\n    return DataStorageHelper.CreateDispatcherObj(\n        DataStorageType.POKE_STORAGE, \n        `result_of_setPokemonData(data, ${pokeID})`, STORAGE_POKE_COMPARE, \n        {\n          [pokeID]: status,\n        }\n    );\n  }\n\n\n// ======= GETTER FUNCTION ======= //\n\n  export function getPokeIdFromDetailURL(detailURL) {\n    \n    if (!Util.isNullOrEmpty(detailURL)) {\n      const tmparr = detailURL.split(\"/\");\n      if (!Util.isNullOrEmpty(tmparr[tmparr.length-1])) {\n        return tmparr[tmparr.length-1];\n      } else {\n        return tmparr[tmparr.length-2];\n      }\n    } return 0\n  }\n\n  export function getPokemonDataByID(props, PokeID) {\n    var result = null;\n    if (!Util.isNullOrUndefined(props[DataStorageType.POKE_STORAGE])) {\n\n      if (!Util.isNullOrUndefined(props[DataStorageType.POKE_STORAGE][STORAGE_POKE_DATA])) {\n        result = props[DataStorageType.POKE_STORAGE][STORAGE_POKE_DATA][PokeID];\n      }\n      \n    } \n    return result;\n  }\n\n  export function getPokemonStatsByID(props, PokeID) {\n    const tempRawData = getPokemonDataByID(props, PokeID);\n    let result = null;\n    if (!Util.isNullOrUndefined(tempRawData)) {\n      if (!Util.isNullOrUndefined(tempRawData.stats)) {\n        result = tempRawData.stats.map((itm,idx)=>({\n          point: itm.base_stat,\n          title: itm.stat.name,\n        }));\n      }\n    }\n    \n    return result;\n  }\n\n\n  export function getPokemonStatsObjectByID(props, PokeID) {\n    const tempRawData = getPokemonDataByID(props, PokeID);\n    let result = null;\n    if (!Util.isNullOrUndefined(tempRawData)) {\n      if (!Util.isNullOrUndefined(tempRawData.stats)) {\n        var tempResult = null;\n        tempRawData.stats.map((itm,idx)=>{\n          if (idx == 0) tempResult = { };\n          tempResult[itm.stat.name] = itm.base_stat;\n        });\n        result = tempResult;\n      }\n    }\n    \n    return result;\n  }\n\n  export function getPokemonHeldItemByID(props, PokeID) {\n    const tempRawData = getPokemonDataByID(props, PokeID);\n    let result = null;\n    if (!Util.isNullOrUndefined(tempRawData)) {\n      if (!Util.isNullOrUndefined(tempRawData.held_items)) {\n        result = tempRawData.held_items.map((itm,idx)=>({\n          name: itm.item.name,\n          url: itm.item.url,\n          rarity: itm.version_details[0].rarity,\n        }));\n      }\n    }\n    \n    return result;\n  }\n\n\n  export function getPokemonSpeciesByID(props, PokeID) {\n    var result = null;\n    if (!Util.isNullOrUndefined(props[DataStorageType.POKE_STORAGE])) {\n\n      if (!Util.isNullOrUndefined(props[DataStorageType.POKE_STORAGE][STORAGE_POKE_SPECIES])) {\n        result = props[DataStorageType.POKE_STORAGE][STORAGE_POKE_SPECIES][PokeID];\n      }\n      \n    } \n    return result;\n  }\n\n  export function getPokemonGenderRateByID(props, PokeID) {\n    var result = 0; // gender_rate < 0 is genderless\n    const tempDataSpecies = getPokemonSpeciesByID(props, PokeID);\n\n    if (!Util.isNullOrUndefined(tempDataSpecies)) {\n      result = tempDataSpecies.gender_rate;\n    }\n\n    return result;\n  }\n\n\n  export function getPokemonFlavorTextByID(props, PokeID) {\n    var result = 0; // gender_rate < 0 is genderless\n    const tempDataSpecies = getPokemonSpeciesByID(props, PokeID);\n\n    if (!Util.isNullOrUndefined(tempDataSpecies)) {\n      result = tempDataSpecies.flavor_text;\n    }\n\n    return result;\n  }\n\n  export function getPokemonGrowthRateByID(props, PokeID) {\n    var result = null; // gender_rate < 0 is genderless\n    const tempDataSpecies = getPokemonSpeciesByID(props, PokeID);\n\n    if (!Util.isNullOrUndefined(tempDataSpecies)) {\n      const tempGrowthRate = tempDataSpecies.growth_rate;\n      result = !Util.isNullOrUndefined(tempGrowthRate)? tempGrowthRate.name: null;\n    }\n\n    return result;\n  }\n\n  export function getPokemonCaptureRateByID(props, PokeID) {\n    var result = 0; // gender_rate < 0 is genderless\n    const tempDataSpecies = getPokemonSpeciesByID(props, PokeID);\n\n    if (!Util.isNullOrUndefined(tempDataSpecies)) {\n      result = Util.isNullOrUndefined(tempDataSpecies.capture_rate)? 0 : tempDataSpecies.capture_rate;\n    }\n\n    return result;\n  }\n\n\n  export function getPokemonWeight(pokeWeight=0) {\n    var result = \"??? kg\";\n    if (!Util.isNullOrEmpty(pokeWeight)) {\n      if (pokeWeight > 0) {\n        const weight = pokeWeight / 10 // pokeWeight in Hectogram, 1 Hectogram = 0.1 Kg\n        result = `${weight} kg`;\n      }\n    }\n\n    return result;\n  }\n\n  export function getPokemonHeight(pokeHeight=0) {\n    var result = \"??? m\";\n\n    if (!Util.isNullOrEmpty(pokeHeight)) {\n      if (pokeHeight > 0) {\n        const height = pokeHeight / 10 // pokeHeight in decimetres, 1 decimetres = 0.1 m\n        result = `${height} m`;\n      }\n    }\n\n    return result;\n  }\n\n\n  export function getPokemonAbilities(props, PokeID, isHidden=false) {\n    const tempRawData = getPokemonDataByID(props, PokeID);\n    let result = [];\n    if (!Util.isNullOrUndefined(tempRawData)) {\n      if (!Util.isNullOrUndefined(tempRawData.abilities)) {\n        const tempresult = tempRawData.abilities.filter((itm)=> {\n\n          if (itm.is_hidden === isHidden) {\n            if (!Util.isNullOrUndefined(itm.ability)) {\n              return true;\n            }\n          }\n          return false;\n        });\n\n        result = tempresult.map(itm=>{\n          return({\n            name: itm.ability.name,\n            url: itm.ability.url,\n          });\n        })\n      }\n    }\n    return result;\n  }\n\n\n\n  export function getSpeciesEggGroupsByID(props, PokeID) {\n    var result = []; \n    const tempDataSpecies = getPokemonSpeciesByID(props, PokeID);\n\n    if (!Util.isNullOrUndefined(tempDataSpecies)) {\n      result = Util.isNullOrUndefined(tempDataSpecies.egg_groups)? [] : tempDataSpecies.egg_groups;\n    }\n\n    return result;\n  }\n\n  function generatePokemonMoves(name, moveUrl, levelLearned, learnMethod, versionGroup) {\n    return({\n      name,\n      url: moveUrl,\n      levelLearned,\n      learnMethod,\n      versionGroup,\n    });\n  }\n\n  export function getPokemonMovesByGameVersion(props, pokeID, gameVersion) {\n    const tempRawData = getPokemonDataByID(props, pokeID);\n    let result = [];\n    if (!Util.isNullOrUndefined(tempRawData)) {\n      if (!Util.isNullOrUndefined(tempRawData.moves)) {\n        for (let i=0; i < tempRawData.moves.length; i++) {\n          const tempdata = tempRawData.moves[i];\n          const version_group_details = tempdata.version_group_details;\n          const move = tempdata.move;\n          var tempData = null; // null = not found\n\n          if (!Util.isNullOrUndefined(move) && !Util.isNullOrUndefined(version_group_details)) {\n            \n            // ===== Start of Checking game version ===== //\n            for (let j=0; j < tempdata.version_group_details.length; j++) {\n              const tempgroupdetails = tempdata.version_group_details[j];\n\n              if (!Util.isNullOrUndefined(tempgroupdetails)) {\n                const level_learned_at = tempgroupdetails.level_learned_at;\n                const move_learn_method = tempgroupdetails.move_learn_method;\n                const version_group = tempgroupdetails.version_group\n\n                if (!Util.isNullOrUndefined(version_group) && !Util.isNullOrUndefined(move_learn_method)) {\n\n                  const checkname = version_group.name;\n  \n                  if (checkname == gameVersion) {\n                      if (!Util.isNullOrUndefined(tempdata.move)) {\n                        tempData = generatePokemonMoves(move.name, move.url, level_learned_at, move_learn_method.name, checkname);\n                      }\n                  }\n                }\n\n              }\n\n            }\n            // ===== End of Checking game version ===== //\n\n          }\n\n          // tempData push to result contained formatted object\n          if (!Util.isNullOrUndefined(tempData)) {\n            result.push(tempData);\n          }\n\n        }\n      }\n    }\n    return result;\n  }\n\n  // result object key = level the move learned by the pokemon\n  export function getPokemonLevelUpMovesByGameVersion(props, pokeID, gameVersion) {\n    const pokemonMoves = getPokemonMovesByGameVersion(props, pokeID, gameVersion);\n    const keyLearnMethod = \"level-up\";\n  \n    var result = { };\n    // Log.debugGroup(`Check getPokemonLevelUpMovesByGameVersion pokeID=${pokeID}`, pokemonMoves);\n    for (let i = 0; i < pokemonMoves.length; i++) {\n      const item = pokemonMoves[i];\n      if (item.learnMethod == keyLearnMethod) {\n        result[item.levelLearned] = [\n          ...(!Util.isNullOrUndefined(result[item.levelLearned])? result[item.levelLearned] : []),\n          item\n        ];\n      }\n    }\n\n    return result;\n  }\n\n\n  export function getCompareStatus(props, pokeID) {\n    var result = 99;\n    if (!Util.isNullOrUndefined(props[DataStorageType.POKE_STORAGE])) {\n\n      if (!Util.isNullOrUndefined(props[DataStorageType.POKE_STORAGE][STORAGE_POKE_COMPARE])) {\n        const tempResult = props[DataStorageType.POKE_STORAGE][STORAGE_POKE_COMPARE][pokeID];\n        result = ( !Util.isNullOrEmpty(tempResult)? tempResult : 99 )\n      }\n      \n    } \n    return result;\n  }\n\n","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/data/DataStorage.js",[],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/high-order/withMainComponent.js",["215"],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/utility/constant/GeneralConstant.js",[],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/main/Main.Component.js",[],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/main/header/Header.Main.js",[],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/pages/pokedata/Pokedata.Page.js",["216","217","218"],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/utility/constant/DataStorageType.js",[],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/utility/index.js",[],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/utility/helper/DataStorageHelper.js",[],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/pages/index.js",[],["219","220"],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/utility/helper/GeneralHelper.js",["221","222","223","224","225"],"\nexport function isNullOrEmpty(str) {\n    if (str === undefined || str == \"undefined\") {\n      return true;\n    } \n    if (str == null) {\n      return true;\n    }\n    if (str == \"\") {\n      return true;\n    }\n    if (str == \"null\") {\n      return true;\n    }\n    return false;\n  };\n  \nexport function isNullOrUndefined(obj) {\n    if (obj === undefined || obj == \"undefined\") {\n      return true;\n    }\n    if (obj == null) {\n      return true;\n    }\n    if (obj == \"null\") {\n      return true;\n    }\n    return false;\n  }\n  \nexport function normalizeString(str) {\n    return isNullOrEmpty(str)?\"\":str;\n  }","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/data/pokemon/Pokemon.DataSource.js",[],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/button/btn-progress/BtnProgress.Component.js",[],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/pokemon-detail/poke-types/PokeTypeList.Item.Component.js",[],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/pokemon-detail/poke-types/PokeTypeList.Component.js",[],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/pages/pokedetail/Pokedetail.Page.js",["226","227"],"import React, { PureComponent } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n\nimport ListPokeDataItem from '../../components/page/pokedata/list-data/ListData.Item.Component';\nimport InfoDetailPoke from '../../components/page/pokedetail/InfoDetail.Component';\nimport PokeStatsDetail from '../../components/pokemon-detail/poke-stat/PokeStats.Component';\n\nimport { Util, Log } from '../../utility';\n\nimport * as PokeDS from '../../data/pokemon/Pokemon.DataSource';\nimport * as PokeStorage from '../../data/pokemon/Pokemon.DataStorage';\n\nconst styles = (theme) => ({\n  container: {\n      marginTop: theme.spacing(3),\n  },\n  btnLoadMore :{\n      width: '100%',\n      marginTop: theme.spacing(2),\n  },\n  itemContainer: {\n      height: '100%',\n  },\n});\n\n\nclass PokeDetailPage extends PureComponent {\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            PokeID: props.match.params.id,\n            PokeData: PokeStorage.getPokemonDataByID(props, props.match.params.id),\n            PokeSpecies: PokeStorage.getPokemonSpeciesByID(props, props.match.params.id),\n            isDataNotFound: false,\n        };\n    }\n\n    componentDidMount() {\n        if (Util.isNullOrUndefined(this.state.PokeData)) {\n            this.getDetailPokemon();\n        }\n        if (Util.isNullOrUndefined(this.state.PokeSpecies)) {\n            this.getSpeciesPokemon();\n        }\n        \n    }\n\n    getDetailPokemon() {\n        PokeDS.getDetailPokemonByID(this.state.PokeID)\n            .then(res=>{\n                Log.debugGroup(\"Check response 404\", res);\n                return res.data\n            })\n            .then(response=> {\n                const pokemonData = PokeStorage.generatePokeDataFromRemote(response);\n                this.props.dispatch(PokeStorage.setPokemonData(pokemonData, this.state.PokeID));\n            })\n            .catch(error=>{\n                const statusCode = Log.errorHandlerAPI(error, this.props.ShowErrorMessage);\n                if (statusCode == 404) {\n                    this.setState({\n                        isDataNotFound: true,\n                    });\n                }\n            });\n\n    }\n\n    getSpeciesPokemon() {\n        PokeDS.getSpeciesPokemonByID(this.state.PokeID)\n            .then(res => res.data)\n            .then(response => {\n                const tempSavingData = PokeStorage.generatePokeSpeciesFromRemote(response);\n                this.props.dispatch(PokeStorage.setPokemonSpecies(tempSavingData, this.state.PokeID));\n            })\n            .catch(error => {\n\n                const statusCode = Log.errorHandlerAPI(error, this.props.ShowErrorMessage);\n                if (statusCode == 404) {\n                    this.setState({\n                        isDataNotFound: true,\n                    });\n                }\n            });\n    }\n\n\n    render() {\n\n        if (!Number.isInteger(parseInt(this.state.PokeID)) || this.state.isDataNotFound) {\n            this.props.history.push(\"/error-404\");\n        }\n\n\n        return(\n            <React.Fragment>\n                <Container className={this.props.classes.container} maxWidth=\"md\">\n                    <Box>\n                        <Grid container spacing={2} justify={'center'}>\n\n                            <Grid item md={5} sm={6} xs={12}>\n                                <Box className={this.props.classes.itemContainer}>\n                                        <ListPokeDataItem\n                                            PokemonID={this.state.PokeID}\n                                            disableClick={true}\n                                        />\n                                </Box>\n                            </Grid>\n\n\n                            <Grid item md={7} sm={6} xs={12}>\n                                <Box className={this.props.classes.itemContainer}>\n                                    <InfoDetailPoke \n                                        PokemonID={this.state.PokeID}\n                                    />\n                                </Box>\n                            </Grid>\n\n\n                            <Grid item xs={12}>\n                                <Box className={this.props.classes.itemContainer}>\n                                    <PokeStatsDetail \n                                        PokemonID={this.state.PokeID}\n                                    />\n                                </Box>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    \n                </Container>\n            </React.Fragment>\n        );\n    }\n}\n\n\nexport default withStyles(styles, { withTheme: true })(PokeDetailPage);","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/pages/error/Error404.Page.js",[],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/page/pokedetail/InfoDetail.Component.js",["228"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { Util, Log, DataStorageType } from '../../../utility';\nimport PokeGender from '../../pokemon-detail/poke-gender/PokeGender.Component';\nimport PokeItemHeldData from '../../pokemon-detail/poke-items-held/PokeItemsHeld.Component';\nimport InfoDetailSkeleton from './InfoDetail.Skeleton';\n\nimport * as PokeStorage from '../../../data/pokemon/Pokemon.DataStorage';\n\n\nconst useStyles = makeStyles((theme) => (\n    {\n        root: {\n        //   maxWidth: 345,\n            height: '100%',\n        },\n        btnLeft: {\n            marginLeft: 'auto',\n            padding: theme.spacing(2),\n        },\n        textContent: {\n            textTransform: 'capitalize',\n        },\n    }\n));\n  \n  \n\n function InfoDetailPoke(props) {\n\n    const classes = useStyles();\n    const { PokemonID } = props;\n\n    const storagePokeData = PokeStorage.getPokemonDataByID(props, PokemonID);\n    const speciesPokeData = PokeStorage.getPokemonSpeciesByID(props, PokemonID);\n\n\n    const pokeItemHeldData = PokeStorage.getPokemonHeldItemByID(props, PokemonID);\n    const pokeGenderRate = PokeStorage.getPokemonGenderRateByID(props, PokemonID);\n    const pokeGrowthRate = PokeStorage.getPokemonGrowthRateByID(props, PokemonID);\n    const pokeCaptureRate = PokeStorage.getPokemonCaptureRateByID(props, PokemonID);\n    \n    if (Util.isNullOrUndefined(storagePokeData) || Util.isNullOrUndefined(speciesPokeData)) {\n        return (<InfoDetailSkeleton/>);\n    } else {\n        return(\n            <Card className={classes.root}>\n                <CardContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={6}>\n                            <Typography variant=\"subtitle1\" gutterBottom>\n                                Height\n                            </Typography>\n                            <Typography className={classes.textContent} variant=\"body2\" gutterBottom>\n                                { PokeStorage.getPokemonHeight(storagePokeData.height) }\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography variant=\"subtitle1\" gutterBottom>\n                                Weight\n                            </Typography>\n                            <Typography className={classes.textContent} variant=\"body2\" gutterBottom>\n                                { PokeStorage.getPokemonWeight(storagePokeData.weight) }\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography variant=\"subtitle1\" gutterBottom>\n                                Body Shape\n                            </Typography>\n                            <Typography className={classes.textContent} variant=\"body2\" gutterBottom>\n                                { Util.isNullOrUndefined(speciesPokeData.shape)? \"???\" : (Util.isNullOrEmpty(speciesPokeData.shape.name)?\"???\":speciesPokeData.shape.name) }\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography variant=\"subtitle1\" gutterBottom>\n                                Habitat\n                            </Typography>\n                            <Typography className={classes.textContent} variant=\"body2\" gutterBottom>\n                                { Util.isNullOrUndefined(speciesPokeData.habitat)? \"???\" : (Util.isNullOrEmpty(speciesPokeData.habitat.name)?\"???\":speciesPokeData.habitat.name) }\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography variant=\"subtitle1\" gutterBottom>\n                                Gender\n                            </Typography>\n                            <Typography className={classes.textContent} variant=\"body2\" gutterBottom>\n                                <PokeGender\n                                    PokeGenderRate={pokeGenderRate}\n                                />\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography variant=\"subtitle1\" gutterBottom>\n                                Items Held\n                            </Typography>\n                            <PokeItemHeldData\n                                PokeItemHeldData={pokeItemHeldData}\n                            />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography variant=\"subtitle1\" gutterBottom>\n                                Growth Rate\n                            </Typography>\n                            <Typography className={classes.textContent} variant=\"body2\" gutterBottom>\n                                { !Util.isNullOrEmpty(pokeGrowthRate) && pokeGrowthRate }\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography variant=\"subtitle1\" gutterBottom>\n                                Capture Rate\n                            </Typography>\n                            <Typography className={classes.textContent} variant=\"body2\" gutterBottom>\n                                { `${pokeCaptureRate} / 255`}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography variant=\"subtitle1\" gutterBottom>\n                                Story\n                            </Typography>\n                            <Typography className={classes.textContent} variant=\"body2\" gutterBottom>\n                                { Util.isNullOrEmpty(speciesPokeData.flavor_text)?\"-\":speciesPokeData.flavor_text }\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n                <CardActions>\n                    \n                </CardActions>\n            </Card>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    [DataStorageType.POKE_STORAGE] : state[DataStorageType.POKE_STORAGE],\n});\n\nexport default withRouter(connect(mapStateToProps)(InfoDetailPoke));\n\n\nInfoDetailPoke.propTypes = { \n    PokemonID: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n      ]).isRequired,\n};\n","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/pokemon-detail/poke-stat/PokeStats.Component.js",["229"],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/page/pokedata/list-data/ListData.Component.js",["230","231"],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/page/pokedata/list-data/ListData.Item.Skeleton.js",[],["232","233"],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/page/pokedata/list-data/ListData.Item.Component.js",["234"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\n// import Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\n// import SearchIcon from '@material-ui/icons/Search';\nimport { Util, Log, DataStorageType } from '../../../../utility';\nimport PokeTypeList from '../../../pokemon-detail/poke-types/PokeTypeList.Component';\nimport ListPokeDataItemSkeleton from './ListData.Item.Skeleton';\nimport { withRouter } from \"react-router-dom\";\n\nimport * as PokeStorage from '../../../../data/pokemon/Pokemon.DataStorage';\n\n\nconst useStyles = makeStyles((theme) => (\n    {\n        root: {\n        //   maxWidth: 345,\n            height: '100%',\n        },\n        mediaCard :{\n          objectFit: 'contain',\n        },\n        btnLeft: {\n            marginLeft: 'auto',\n            padding: theme.spacing(2),\n        },\n    }\n));\n  \n  \n\n function ListPokeDataItem(props) {\n\n    const classes = useStyles();\n    const { PokemonID, disableClick } = props;\n\n    const storagePokeData = PokeStorage.getPokemonDataByID(props, PokemonID);\n\n    const dataClickHandler = (pokeID) => {\n      props.history.push(`/detail/${storagePokeData.id}`);\n    }\n\n    if (Util.isNullOrUndefined(storagePokeData)) {\n        return (<ListPokeDataItemSkeleton/>);\n    } else {\n        return(\n            <Card className={classes.root}>\n              <CardActionArea style={{ height:'100%', }} disabled={disableClick} onClick={()=>dataClickHandler(storagePokeData.id)}>\n                {/* <Link to={`/detail/${storagePokeData.id}`}> */}\n                {/* <Link color=\"inherit\" onClick={dataClickHandler}> */}\n                  <CardMedia\n                    className={classes.mediaCard}\n                    component=\"img\"\n                    alt={ storagePokeData.name }\n                    height=\"145\"\n                    image={storagePokeData.image}\n                    title={ storagePokeData.name }\n                  />\n                  <CardContent>\n                    <Typography gutterBottom variant=\"subtitle1\" component=\"span\">\n                      { \"#\"+(`${storagePokeData.id}`).padStart(3, '0') }\n                    </Typography>\n                    <Typography gutterBottom variant=\"h5\" component=\"h3\" style={{ textTransform: 'capitalize' }}>\n                      { storagePokeData.name }\n                    </Typography>\n                    <PokeTypeList\n                      ListPokeType={storagePokeData.types}\n                    />\n                  </CardContent>\n                  <CardActions>\n                      {/* <Link className={classes.btnLeft} color=\"primary\">\n                          <SearchIcon/>Detail\n                      </Link> */}\n                  </CardActions>\n                {/* </Link> */}\n              </CardActionArea>\n            </Card>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    [DataStorageType.POKE_STORAGE] : state[DataStorageType.POKE_STORAGE],\n});\n\nexport default withRouter(connect(mapStateToProps)(ListPokeDataItem));\n\nListPokeDataItem.propTypes = {\n  PokemonID: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]).isRequired,\n  disableClick: PropTypes.bool\n};\n\nListPokeDataItem.defaultProps = {\n  disableClick: false,\n};","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/page/pokedata/filter-data/FilterData.Component.js",["235","236"],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/data/types/Types.DataStorage.js",["237","238","239"],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/data/types/Types.DataSource.js",["240"],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/pokemon-detail/poke-stat/PokeStats.Point.Component.js",[],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/pokemon-detail/poke-gender/PokeGender.Component.js",["241"],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/pokemon-detail/poke-items-held/PokeItemsHeld.Component.js",[],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/page/pokedetail/InfoDetail.Skeleton.js",[],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/pokemon-detail/poke-stat/PokeStats.Skeleton.js",[],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/alert/CollapsibleAlert.Component.js",[],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/pages/pokecompare/Pokecompare.Page.js",["242","243","244"],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/page/pokecompare/header-input/HeaderInput.Component.js",["245","246"],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/page/pokecompare/basic-info/BasicInfo.Component.js",["247","248","249","250","251","252"],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nimport PokeTypeList from '../../../pokemon-detail/poke-types/PokeTypeList.Component';\nimport { TableCellDataWrapper, CompareDataWrapper, AbilitiesWrapper } from '../compare-wrapper/CompareWrapper.Component';\n\nimport { Util, Log, DataStorageType } from '../../../../utility';\n\nimport * as PokeStorage from '../../../../data/pokemon/Pokemon.DataStorage';\n\n\nfunction BasicInfoComponent(props) {\n\n    const { tableCellInfoClassName, tableCellClassName, ArrPokeID } = props;\n\n\n    const data = Array.from({ length: ArrPokeID.length }, () => ({ PokeID:\"\", PokeData: null, PokeSpecies: null }));\n\n\n    for (let i = 0; i < ArrPokeID.length; i++) {\n        const pokeID = ArrPokeID[i];\n        const tempData = data[i];\n        if (!Util.isNullOrEmpty(pokeID)) {\n            const PokeData =  PokeStorage.getPokemonDataByID(props, pokeID);\n            const PokeSpecies = PokeStorage.getPokemonSpeciesByID(props, pokeID);\n            tempData.PokeID = pokeID;\n            tempData.PokeData = PokeData;\n            tempData.PokeSpecies = PokeSpecies;\n            data[i] = tempData;\n        }\n    }\n\n\n    return(\n        <>\n            <TableRow role=\"checkbox\" tabIndex={-1} >\n                <TableCell className={tableCellInfoClassName} align=\"left\">\n                    Type\n                </TableCell>\n                {\n                    data.map((itm,idx)=> (\n                        <CompareDataWrapper key={`compare-type-${idx}`} Item={itm} tableCellClassName={tableCellClassName} >\n                            {\n                                !Util.isNullOrEmpty(itm.PokeID) && !Util.isNullOrUndefined(itm.PokeData)?\n                                <Box alignItems=\"center\" style={{ marginLeft: 'auto', marginRight: 'auto', maxWidth: '50%'}}>\n                                    <PokeTypeList\n                                        ListPokeType={itm.PokeData.types}\n                                    />\n                                </Box>\n                                :\"\"\n                            }\n                        </CompareDataWrapper>\n                    ))\n                }\n            </TableRow>\n            <TableRow role=\"checkbox\" tabIndex={-1} >\n                <TableCell className={tableCellInfoClassName} align=\"left\">\n                    Abilities\n                </TableCell>\n                {\n                    data.map((itm,idx)=>(\n                        <CompareDataWrapper key={`compare-type-${idx}`} Item={itm} tableCellClassName={tableCellClassName} >\n                            {\n                                !Util.isNullOrEmpty(itm.PokeID) && !Util.isNullOrUndefined(itm.PokeData)?\n                                <AbilitiesWrapper AbilitiesData={PokeStorage.getPokemonAbilities(props, itm.PokeID, false)} />\n                                :\"\"\n                            }\n                        </CompareDataWrapper>\n                    ))\n                }\n            </TableRow>\n            <TableRow role=\"checkbox\" tabIndex={-1} >\n                <TableCell className={tableCellInfoClassName} align=\"left\">\n                    Hidden Ability\n                </TableCell>\n                {\n                    data.map((itm,idx)=>(\n                        <CompareDataWrapper key={`compare-type-${idx}`} Item={itm} tableCellClassName={tableCellClassName} >\n                            {\n                                !Util.isNullOrEmpty(itm.PokeID) && !Util.isNullOrUndefined(itm.PokeData)?\n                                <AbilitiesWrapper AbilitiesData={PokeStorage.getPokemonAbilities(props, itm.PokeID, true)} />\n                                :\"\"\n                            }\n                        </CompareDataWrapper>\n                    ))\n                }\n            </TableRow>\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    [DataStorageType.POKE_STORAGE] : state[DataStorageType.POKE_STORAGE],\n});\n\nexport default connect(mapStateToProps)(BasicInfoComponent);\n\n\nBasicInfoComponent.propTypes = {\n    tableCellClassName: PropTypes.string,\n    tableCellInfoClassName: PropTypes.string,\n    ArrPokeID: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nBasicInfoComponent.defaultProps = {\n    tableCellClassName: '',\n    tableCellInfoClassName: '',\n};\n\n","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/page/pokecompare/compare-wrapper/CompareWrapper.Component.js",["253"],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/page/pokecompare/breed-train-info/BreedTrainInfo.Component.js",[],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/page/pokecompare/header-sub/HeaderSub.Component.js",["254","255"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\n\nimport {  CompareDataWrapper } from '../compare-wrapper/CompareWrapper.Component';\n\nimport { Util, Log, DataStorageType } from '../../../../utility';\nimport * as PokeStorage from '../../../../data/pokemon/Pokemon.DataStorage';\n\n\nconst useStyles = makeStyles((theme) => ({\n    avatarLarge: {\n        width: theme.spacing(15),\n        height: theme.spacing(15),\n        marginLeft: 'auto',\n        marginRight: 'auto',\n    },\n  }));\n\n\nfunction HeaderSubComponent(props) {\n\n    const classes = useStyles();\n    const { tableRowClassName, tableCellClassName, ArrPokeID } = props;\n\n    const data = Array.from({ length: ArrPokeID.length }, () => ({ PokeID:\"\", PokeData: null, PokeSpecies: null }));\n\n    for (let i = 0; i < ArrPokeID.length; i++) {\n        const pokeID = ArrPokeID[i];\n        const tempData = data[i];\n        if (!Util.isNullOrEmpty(pokeID)) {\n            const PokeData =  PokeStorage.getPokemonDataByID(props, pokeID);\n            const PokeSpecies = PokeStorage.getPokemonSpeciesByID(props, pokeID);\n            tempData.PokeID = pokeID;\n            tempData.PokeData = PokeData;\n            tempData.PokeSpecies = PokeSpecies;\n            data[i] = tempData;\n        }\n    }\n\n    const handleUrlClick = (clickedPokeID) => props.history.push(`/detail/${clickedPokeID}`);\n\n\n    return(\n        <>\n            <TableRow className={tableRowClassName}>\n                <TableCell className={tableCellClassName} align=\"center\">\n                </TableCell>\n                {\n                    data.map((itm,idx)=> (\n                        <CompareDataWrapper key={`compare-type-${idx}`} Item={itm} tableCellClassName={tableCellClassName} >\n                            {\n                                !Util.isNullOrEmpty(itm.PokeID) && !Util.isNullOrUndefined(itm.PokeData)?      \n                                <Link href=\"#\" onClick={()=>handleUrlClick(itm.PokeID)} variant=\"body2\">\n                                    <Avatar alt={itm.PokeData.name} src={ itm.PokeData.image } className={classes.avatarLarge} />\n                                    <Typography color=\"textPrimary\" variant=\"body1\" style={{ textTransform: 'capitalize', textDecoration: 'underline', }}>{ itm.PokeData.name }</Typography>\n                                    \n                                </Link>\n                                :\"\"\n                            }\n                        </CompareDataWrapper>\n                    ))\n                }\n            </TableRow>\n        </>\n    );\n}\n\n\nconst mapStateToProps = (state) => ({\n    [DataStorageType.POKE_STORAGE] : state[DataStorageType.POKE_STORAGE],\n});\n\nexport default withRouter(connect(mapStateToProps)(HeaderSubComponent));\n\n\nHeaderSubComponent.propTypes = {\n    tableCellClassName: PropTypes.string,\n    tableRowClassName: PropTypes.string,\n};\n\nHeaderSubComponent.defaultProps = {\n    tableCellClassName: '',\n    tableRowClassName: '',\n};","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/page/pokecompare/stats-info/StatsInfoCompare.Component.js",["256","257"],"/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/page/pokecompare/moves-info/LevelUpMoves.Component.js",["258","259","260"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\n\nimport { CompareDataWrapper, NameListWrapper } from '../compare-wrapper/CompareWrapper.Component';\nimport PokeGender from '../../../pokemon-detail/poke-gender/PokeGender.Component';\n\nimport { Util, Log, DataStorageType } from '../../../../utility';\n\nimport * as PokeStorage from '../../../../data/pokemon/Pokemon.DataStorage';\n\n\n\nfunction LevelUpMovesComponent(props) {\n\n\n\n    const { tableCellInfoClassName, tableCellClassName, ArrPokeID, GameVersionType } = props;\n\n\n    const data = Array.from({ length: ArrPokeID.length }, () => ({ PokeID:\"\", PokeData: null, PokeSpecies: null, PokeMoves: null }));\n\n    var LevelPokeMoves = []; // array of level from PokeMoves Object.keys\n\n    for (let i = 0; i < ArrPokeID.length; i++) {\n        const pokeID = ArrPokeID[i];\n        const tempData = data[i];\n        if (!Util.isNullOrEmpty(pokeID)) {\n            const PokeData =  PokeStorage.getPokemonDataByID(props, pokeID);\n            const PokeSpecies = PokeStorage.getPokemonSpeciesByID(props, pokeID);\n            tempData.PokeID = pokeID;\n            tempData.PokeData = PokeData;\n            tempData.PokeSpecies = PokeSpecies;\n\n            if (!Util.isNullOrUndefined(PokeData)) {\n                // Generate PokeMoves\n                const pokeMovesByLevel = PokeStorage.getPokemonLevelUpMovesByGameVersion(props, pokeID, GameVersionType);\n                tempData.PokeMoves = pokeMovesByLevel;\n                const arrLevelMoves = Object.keys(pokeMovesByLevel);\n                if (LevelPokeMoves.length < 1) {\n                    LevelPokeMoves = arrLevelMoves;\n                } else {\n                    const tempLevelPokeMoves = [...new Set([...LevelPokeMoves,...arrLevelMoves])];\n                    LevelPokeMoves = tempLevelPokeMoves;\n                }\n            }\n\n            data[i] = tempData;\n        }\n\n\n        if (i == (ArrPokeID.length - 1) && LevelPokeMoves.length > 0) {\n            // Sort the level on Last Pokemon data\n            LevelPokeMoves.sort(function(x, y) {\n                const tmpX = parseInt(x);\n                const tmpY = parseInt(y);\n                if (tmpX < tmpY) {\n                  return -1;\n                }\n                if (tmpX > tmpY) {\n                  return 1;\n                }\n                return 0;\n              });\n        }\n    }\n\n\n    return(\n        <>\n            {\n                LevelPokeMoves.map((level, idxLevel)=>(\n                    <TableRow key={`compare-moves-level-${idxLevel}`} role=\"checkbox\" tabIndex={-1} >\n                        <TableCell className={tableCellInfoClassName} align=\"left\">\n                            { `Level ${level}` }\n                        </TableCell>\n                        {\n                            data.map((itm,idx)=> (\n                                <CompareDataWrapper key={`compare-moves-level-${idxLevel}-poke-${idx}`} Item={itm} tableCellClassName={tableCellClassName} >\n                                    {\n                                        !Util.isNullOrEmpty(itm.PokeID) && !Util.isNullOrUndefined(itm.PokeMoves)?\n                                        !Util.isNullOrUndefined(itm.PokeMoves[level])?<NameListWrapper data={itm.PokeMoves[level]} variant=\"caption\"/>:\"\"\n                                        :\"\"\n                                    }\n                                </CompareDataWrapper>\n                            ))\n                        }\n                    </TableRow>\n                ))\n            }\n        </>\n    );\n}\n\n\nconst mapStateToProps = (state) => ({\n    [DataStorageType.POKE_STORAGE] : state[DataStorageType.POKE_STORAGE],\n});\n\nexport default connect(mapStateToProps)(LevelUpMovesComponent);\n\n\nLevelUpMovesComponent.propTypes = {\n    tableCellClassName: PropTypes.string,\n    tableCellInfoClassName: PropTypes.string,\n    ArrPokeID: PropTypes.arrayOf(PropTypes.string).isRequired,\n    GameVersionType: PropTypes.string.isRequired,\n};\n\nLevelUpMovesComponent.defaultProps = {\n    tableCellClassName: '',\n    tableCellInfoClassName: '',\n};","/Volumes/PisanGG/Private Project/test-warungpintar/pokedex-app-plus/src/components/page/pokecompare/flavor-info/FlavorInfo.Component.js",["261"],{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"262","replacedBy":"266"},{"ruleId":"264","replacedBy":"267"},{"ruleId":"268","severity":1,"message":"269","line":73,"column":34,"nodeType":"270","messageId":"271","endLine":73,"endColumn":36},{"ruleId":"272","severity":1,"message":"273","line":1,"column":16,"nodeType":"274","messageId":"275","endLine":1,"endColumn":19},{"ruleId":"268","severity":1,"message":"269","line":21,"column":21,"nodeType":"270","messageId":"271","endLine":21,"endColumn":23},{"ruleId":"276","severity":1,"message":"277","line":79,"column":26,"nodeType":"278","messageId":"279","endLine":79,"endColumn":28},{"ruleId":"268","severity":1,"message":"269","line":80,"column":73,"nodeType":"270","messageId":"271","endLine":80,"endColumn":75},{"ruleId":"276","severity":1,"message":"277","line":192,"column":40,"nodeType":"278","messageId":"279","endLine":192,"endColumn":42},{"ruleId":"268","severity":1,"message":"269","line":193,"column":19,"nodeType":"270","messageId":"271","endLine":193,"endColumn":21},{"ruleId":"268","severity":1,"message":"269","line":380,"column":33,"nodeType":"270","messageId":"271","endLine":380,"endColumn":35},{"ruleId":"268","severity":1,"message":"269","line":414,"column":28,"nodeType":"270","messageId":"271","endLine":414,"endColumn":30},{"ruleId":"272","severity":1,"message":"273","line":7,"column":10,"nodeType":"274","messageId":"275","endLine":7,"endColumn":13},{"ruleId":"268","severity":1,"message":"269","line":151,"column":40,"nodeType":"270","messageId":"271","endLine":151,"endColumn":42},{"ruleId":"268","severity":1,"message":"269","line":165,"column":41,"nodeType":"270","messageId":"271","endLine":165,"endColumn":43},{"ruleId":"268","severity":1,"message":"269","line":209,"column":49,"nodeType":"270","messageId":"271","endLine":209,"endColumn":51},{"ruleId":"262","replacedBy":"280"},{"ruleId":"264","replacedBy":"281"},{"ruleId":"268","severity":1,"message":"269","line":3,"column":34,"nodeType":"270","messageId":"271","endLine":3,"endColumn":36},{"ruleId":"268","severity":1,"message":"269","line":9,"column":13,"nodeType":"270","messageId":"271","endLine":9,"endColumn":15},{"ruleId":"268","severity":1,"message":"269","line":12,"column":13,"nodeType":"270","messageId":"271","endLine":12,"endColumn":15},{"ruleId":"268","severity":1,"message":"269","line":19,"column":34,"nodeType":"270","messageId":"271","endLine":19,"endColumn":36},{"ruleId":"268","severity":1,"message":"269","line":25,"column":13,"nodeType":"270","messageId":"271","endLine":25,"endColumn":15},{"ruleId":"268","severity":1,"message":"269","line":65,"column":32,"nodeType":"270","messageId":"271","endLine":65,"endColumn":34},{"ruleId":"268","severity":1,"message":"269","line":84,"column":32,"nodeType":"270","messageId":"271","endLine":84,"endColumn":34},{"ruleId":"272","severity":1,"message":"273","line":11,"column":16,"nodeType":"274","messageId":"275","endLine":11,"endColumn":19},{"ruleId":"272","severity":1,"message":"282","line":31,"column":11,"nodeType":"274","messageId":"275","endLine":31,"endColumn":18},{"ruleId":"272","severity":1,"message":"283","line":8,"column":10,"nodeType":"274","messageId":"275","endLine":8,"endColumn":14},{"ruleId":"272","severity":1,"message":"284","line":8,"column":21,"nodeType":"274","messageId":"275","endLine":8,"endColumn":36},{"ruleId":"262","replacedBy":"285"},{"ruleId":"264","replacedBy":"286"},{"ruleId":"272","severity":1,"message":"273","line":13,"column":16,"nodeType":"274","messageId":"275","endLine":13,"endColumn":19},{"ruleId":"272","severity":1,"message":"287","line":9,"column":8,"nodeType":"274","messageId":"275","endLine":9,"endColumn":22},{"ruleId":"272","severity":1,"message":"288","line":70,"column":13,"nodeType":"274","messageId":"275","endLine":70,"endColumn":17},{"ruleId":"272","severity":1,"message":"273","line":1,"column":16,"nodeType":"274","messageId":"275","endLine":1,"endColumn":19},{"ruleId":"268","severity":1,"message":"269","line":26,"column":21,"nodeType":"270","messageId":"271","endLine":26,"endColumn":23},{"ruleId":"268","severity":1,"message":"269","line":243,"column":46,"nodeType":"270","messageId":"271","endLine":243,"endColumn":48},{"ruleId":"272","severity":1,"message":"283","line":3,"column":10,"nodeType":"274","messageId":"275","endLine":3,"endColumn":14},{"ruleId":"272","severity":1,"message":"289","line":4,"column":8,"nodeType":"274","messageId":"275","endLine":4,"endColumn":15},{"ruleId":"268","severity":1,"message":"269","line":151,"column":32,"nodeType":"270","messageId":"271","endLine":151,"endColumn":34},{"ruleId":"272","severity":1,"message":"290","line":172,"column":23,"nodeType":"274","messageId":"275","endLine":172,"endColumn":33},{"ruleId":"272","severity":1,"message":"290","line":184,"column":23,"nodeType":"274","messageId":"275","endLine":184,"endColumn":33},{"ruleId":"272","severity":1,"message":"273","line":17,"column":16,"nodeType":"274","messageId":"275","endLine":17,"endColumn":19},{"ruleId":"272","severity":1,"message":"291","line":42,"column":95,"nodeType":"274","messageId":"275","endLine":42,"endColumn":117},{"ruleId":"272","severity":1,"message":"292","line":1,"column":17,"nodeType":"274","messageId":"275","endLine":1,"endColumn":26},{"ruleId":"272","severity":1,"message":"293","line":4,"column":10,"nodeType":"274","messageId":"275","endLine":4,"endColumn":20},{"ruleId":"272","severity":1,"message":"294","line":7,"column":8,"nodeType":"274","messageId":"275","endLine":7,"endColumn":14},{"ruleId":"272","severity":1,"message":"295","line":9,"column":8,"nodeType":"274","messageId":"275","endLine":9,"endColumn":16},{"ruleId":"272","severity":1,"message":"296","line":12,"column":10,"nodeType":"274","messageId":"275","endLine":12,"endColumn":30},{"ruleId":"272","severity":1,"message":"273","line":14,"column":16,"nodeType":"274","messageId":"275","endLine":14,"endColumn":19},{"ruleId":"272","severity":1,"message":"273","line":7,"column":16,"nodeType":"274","messageId":"275","endLine":7,"endColumn":19},{"ruleId":"272","severity":1,"message":"297","line":1,"column":17,"nodeType":"274","messageId":"275","endLine":1,"endColumn":25},{"ruleId":"272","severity":1,"message":"273","line":15,"column":16,"nodeType":"274","messageId":"275","endLine":15,"endColumn":19},{"ruleId":"272","severity":1,"message":"292","line":1,"column":17,"nodeType":"274","messageId":"275","endLine":1,"endColumn":26},{"ruleId":"272","severity":1,"message":"273","line":9,"column":16,"nodeType":"274","messageId":"275","endLine":9,"endColumn":19},{"ruleId":"272","severity":1,"message":"298","line":8,"column":8,"nodeType":"274","messageId":"275","endLine":8,"endColumn":18},{"ruleId":"272","severity":1,"message":"273","line":10,"column":16,"nodeType":"274","messageId":"275","endLine":10,"endColumn":19},{"ruleId":"268","severity":1,"message":"269","line":54,"column":15,"nodeType":"270","messageId":"271","endLine":54,"endColumn":17},{"ruleId":"272","severity":1,"message":"298","line":8,"column":8,"nodeType":"274","messageId":"275","endLine":8,"endColumn":18},"no-native-reassign",["299"],"no-negated-in-lhs",["300"],["299"],["300"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'Log' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["299"],["300"],"'classes' is assigned a value but never used.","'Util' is defined but never used.","'DataStorageType' is defined but never used.",["299"],["300"],"'CardActionArea' is defined but never used.","'name' is assigned a value but never used.","'Divider' is defined but never used.","'statusCode' is assigned a value but never used.","'currentComparingPokeID' is assigned a value but never used.","'useEffect' is defined but never used.","'makeStyles' is defined but never used.","'Avatar' is defined but never used.","'Skeleton' is defined but never used.","'TableCellDataWrapper' is defined but never used.","'useState' is defined but never used.","'PokeGender' is defined but never used.","no-global-assign","no-unsafe-negation"]